name: CI

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/ci.yml"
      - "sd_webui_gallery/**"
      - "test/**"
      - "pyproject.toml"
      - "poetry.lock"
  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/ci.yml"
      - "sd_webui_gallery/**"
      - "test/**"
      - "pyproject.toml"
      - "poetry.lock"
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        poetry-version: [1.6.1]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: View poetry --help
        run: poetry --help

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install --only main,test

      - name: Lint *.py files
        run: |
          poetry run pylint scripts
